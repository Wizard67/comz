@import "../variables/global";
@import "../mixins/function";

.cbutton { @extend %button; }
.cbutton.cbutton--text { @extend %button--text; }
.cbutton.cbutton--loading { @extend %button--loading; }
.cbutton.cbutton--disabled { @extend %button--disabled; }
 
$props-color-r: --cbutton-color-r;
$props-color-g: --cbutton-color-g;
$props-color-b: --cbutton-color-b;

$animation: unique-id();

%button {
  --cbutton-color-r: initial;
  --cbutton-color-g: initial;
  --cbutton-color-b: initial;

  --box-shadow: initial;
  --color: initial;
  --background-color: initial;
  --cursor: initial;

  // if type is text, the default color is rgb(52, 142, 199)
  // else is rgb(255, 255, 255).
  --is-text: initial;
  --text-r: var(--is-text) 52;
  --text-g: var(--is-text) 142;
  --text-b: var(--is-text) 199;
  --default-r: var(--text-r, 255);
  --default-g: var(--text-g, 255);
  --default-b: var(--text-b, 255);

  // current color.
  --red: var(#{$props-color-r}, var(--default-r));
  --green: var(#{$props-color-g}, var(--default-g));
  --blue: var(#{$props-color-b}, var(--default-b));
  
  // calculate the foreground-color and the background-color.
  --r: calc(var(--red) * 0.2126);
  --g: calc(var(--green) * 0.7152);
  --b: calc(var(--blue) * 0.0722);
  --sum: calc(var(--r) + var(--g) + var(--b));

  --lightness: calc(var(--sum) / 255);
  --darkness: calc((var(--lightness) - 0.8) * 100);

  --custom-color: rgb(var(--red), var(--green), var(--blue));
  --foreground: hsl(0, 0%, calc((var(--lightness) - 0.5) * -10000000%));
  --background: rgba(
                  calc(var(--red) - var(--darkness)),
                  calc(var(--green) - var(--darkness)),
                  calc(var(--blue) - var(--darkness)),
                  0.9
                );

  --color: var(--foreground);

  appearance: none;
  box-sizing: border-box;
  position: relative;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  padding: px2em(4px) px2em(16px);
  border: none;
  border-radius: px2em(4px);
  box-shadow: var(--box-shadow, #{$shadow-form});
  background-color: var(--background-color, var(--custom-color));
  color: var(--color);
  font-size: 14px;
  line-height: 1.2;
  transition: all .1s ease-in-out;
  user-select: none;
  overflow: hidden;
  cursor: var(--cursor, pointer);
  isolation: isolate;

  &::before {
    content: "\200b";
  }

  &:focus {
    outline: none;
  }

  &:hover {
    background-color: var(--background);
  }

  &:active {
    background-color: var(--background-color, var(--custom-color));
  }
}

%button--text {
  --is-text: ;

  --box-shadow: none;
  --color: var(--custom-color);
  --background-color: transparent;

  &:hover {
    color: var(--background);
    background-color: unset;
  }

  &:active {
    color: var(--custom-color);
  }
}

%button--loading {
  --cursor: wait;

  * {
    opacity: 0;
  }

  &::after {
    content: "";
    position: absolute;
    display: block;
    width: px2em(14px);
    height: px2em(14px);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: transparent;
    box-sizing: border-box;
    border-top: px2em(2px) solid currentColor;
    border-left: px2em(2px) solid transparent;
    border-right: px2em(2px) solid transparent;
    border-bottom: px2em(2px) solid transparent;
    border-radius: 100%;
    animation: #{$animation} 0.6s ease-out infinite;
  }
}

%button--disabled {
  --b-s: var(--is-text) none;
  --b-c: var(--is-text) transparent;

  --box-shadow: var(--b-s, #{$shadow-form-disabled});
  --color: #{$text-disabled};
  --background-color: var(--b-c, #{$color-inactive});
  --cursor: not-allowed;

  &:hover {
    color: var(--color);
    background-color: var(--b-c, #{$color-inactive});
  }
}

@keyframes #{$animation} {
	100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}
